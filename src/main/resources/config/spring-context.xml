<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="objectCreator" class="utils.TestingUtils$ScalaObjectsCreator" />

    <bean id="defaultRbfParams" class="utils.KernelRequisites$GaussianRbfParams">
        <constructor-arg name="alpha" value="1.0" />
        <constructor-arg name="gamma" value="1.0" />
        <constructor-arg name="beta" value="#{ T(java.lang.Math).sqrt(0.00125) }" />
    </bean>

    <bean  id="rbfKernel" class="utils.KernelRequisites$GaussianRbfKernel">
        <constructor-arg name="rbfParams" ref="defaultRbfParams" />
    </bean>

    <bean id="gpPredictor" class="gp.regression.GpPredictor">
        <constructor-arg name="kernelFunc" ref="rbfKernel" />
    </bean>

    <bean id="stopCriterion" class="gp.classification.EpParameterEstimator$AvgBasedStopCriterion">
        <constructor-arg name="eps" value="0.01" />
    </bean>

    <bean id="gpClassifier" class="gp.classification.GpClassifier">
        <constructor-arg name="kernelFun" ref="rbfKernel" />
        <constructor-arg name="stopCriterion" ref="stopCriterion" />
    </bean>

    <bean id="breezeLbfgsOptimizer" class="optimization.Optimization$BreezeLbfgsOptimizer" />

    <bean id="gpOptimizer" class="gp.optimization.GPOptimizer">
        <constructor-arg name="gpPredictor" ref="gpPredictor" />
        <constructor-arg name="noise" value="#{objectCreator.none()}" />
        <constructor-arg name="gradientOptimizer" ref="breezeLbfgsOptimizer" />
    </bean>
</beans>